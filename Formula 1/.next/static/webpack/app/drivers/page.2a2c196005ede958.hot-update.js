"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/drivers/page",{

/***/ "(app-pages-browser)/./src/components/FlagDisplay.tsx":
/*!****************************************!*\
  !*** ./src/components/FlagDisplay.tsx ***!
  \****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FlagDisplay: function() { return /* binding */ FlagDisplay; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* __next_internal_client_entry_do_not_use__ FlagDisplay auto */ \nfunction FlagDisplay(param) {\n    let { nationality, size = \"md\" } = param;\n    const getFlagColors = (nationality)=>{\n        const flagStyles = {\n            \"British\": \"bg-gradient-to-r from-red-600 via-white to-blue-600\",\n            \"Dutch\": \"bg-gradient-to-r from-red-600 via-white to-blue-600\",\n            \"Spanish\": \"bg-gradient-to-b from-red-600 via-yellow-400 to-red-600\",\n            \"Mon\\xe9gasque\": \"bg-gradient-to-r from-red-600 to-white\",\n            \"Monegasque\": \"bg-gradient-to-r from-red-600 to-white\",\n            \"Mexican\": \"bg-gradient-to-r from-green-600 via-white to-red-600\",\n            \"Australian\": \"bg-gradient-to-r from-blue-600 via-white to-blue-600\",\n            \"Canadian\": \"bg-gradient-to-r from-red-600 via-white to-red-600\",\n            \"French\": \"bg-gradient-to-r from-blue-600 via-white to-red-600\",\n            \"German\": \"bg-gradient-to-b from-black via-red-600 to-yellow-400\",\n            \"Japanese\": \"bg-white border-2 border-red-600\",\n            \"Finnish\": \"bg-gradient-to-r from-white to-blue-600\",\n            \"Danish\": \"bg-gradient-to-r from-red-600 via-white to-red-600\",\n            \"Thai\": \"bg-gradient-to-b from-red-600 via-white to-blue-600\",\n            \"Chinese\": \"bg-gradient-to-r from-red-600 via-yellow-400 to-red-600\",\n            \"American\": \"bg-gradient-to-b from-red-600 via-white to-blue-600\",\n            \"Italian\": \"bg-gradient-to-r from-green-600 via-white to-red-600\",\n            \"Brazilian\": \"bg-gradient-to-b from-green-600 via-yellow-400 to-blue-600\",\n            \"Argentine\": \"bg-gradient-to-b from-lightblue-400 via-white to-lightblue-400\",\n            \"South African\": \"bg-gradient-to-r from-red-600 via-white to-blue-600\",\n            \"Austrian\": \"bg-gradient-to-r from-red-600 via-white to-red-600\",\n            \"Swiss\": \"bg-gradient-to-r from-red-600 to-white\",\n            \"Belgian\": \"bg-gradient-to-r from-black via-yellow-400 to-red-600\",\n            \"New Zealander\": \"bg-gradient-to-r from-blue-600 via-white to-blue-600\",\n            \"Venezuelan\": \"bg-gradient-to-b from-yellow-400 via-blue-600 to-red-600\",\n            \"Russian\": \"bg-gradient-to-b from-white via-blue-600 to-red-600\",\n            \"Portuguese\": \"bg-gradient-to-r from-green-600 via-red-600 to-green-600\",\n            \"Polish\": \"bg-gradient-to-b from-white to-red-600\",\n            \"Czech\": \"bg-gradient-to-r from-white via-red-600 to-blue-600\",\n            \"Hungarian\": \"bg-gradient-to-b from-red-600 via-white to-green-600\",\n            \"Swedish\": \"bg-gradient-to-r from-blue-600 via-yellow-400 to-blue-600\",\n            \"Norwegian\": \"bg-gradient-to-r from-red-600 via-white to-blue-600\",\n            \"Indian\": \"bg-gradient-to-b from-orange-500 via-white to-green-600\",\n            \"Colombian\": \"bg-gradient-to-b from-yellow-400 via-blue-600 to-red-600\",\n            \"Chilean\": \"bg-gradient-to-b from-blue-600 via-white to-red-600\",\n            \"Uruguayan\": \"bg-gradient-to-b from-blue-600 via-white to-blue-600\",\n            \"Peruvian\": \"bg-gradient-to-r from-red-600 via-white to-red-600\",\n            \"Ecuadorian\": \"bg-gradient-to-b from-yellow-400 via-blue-600 to-red-600\",\n            \"Paraguayan\": \"bg-gradient-to-b from-red-600 via-white to-blue-600\",\n            \"Bolivian\": \"bg-gradient-to-b from-red-600 via-yellow-400 to-green-600\",\n            \"Croatian\": \"bg-gradient-to-r from-red-600 via-white to-blue-600\",\n            \"Slovenian\": \"bg-gradient-to-b from-white via-blue-600 to-red-600\",\n            \"Slovak\": \"bg-gradient-to-b from-white via-blue-600 to-red-600\",\n            \"Romanian\": \"bg-gradient-to-r from-blue-600 via-yellow-400 to-red-600\",\n            \"Bulgarian\": \"bg-gradient-to-b from-white via-green-600 to-red-600\",\n            \"Greek\": \"bg-gradient-to-b from-blue-600 via-white to-blue-600\",\n            \"Turkish\": \"bg-gradient-to-r from-red-600 to-white\",\n            \"Israeli\": \"bg-gradient-to-b from-blue-600 via-white to-blue-600\",\n            \"Lebanese\": \"bg-gradient-to-b from-red-600 via-white to-green-600\",\n            \"Jordanian\": \"bg-gradient-to-b from-black via-white to-green-600\",\n            \"Emirati\": \"bg-gradient-to-r from-red-600 via-white to-black\",\n            \"Saudi\": \"bg-gradient-to-r from-green-600 to-white\",\n            \"Qatari\": \"bg-gradient-to-r from-red-600 to-white\",\n            \"Kuwaiti\": \"bg-gradient-to-r from-green-600 via-white to-red-600\",\n            \"Bahraini\": \"bg-gradient-to-r from-red-600 to-white\",\n            \"Omani\": \"bg-gradient-to-r from-red-600 via-white to-green-600\",\n            \"Yemeni\": \"bg-gradient-to-b from-red-600 via-white to-black\",\n            \"Iraqi\": \"bg-gradient-to-b from-red-600 via-white to-black\",\n            \"Iranian\": \"bg-gradient-to-b from-green-600 via-white to-red-600\",\n            \"Afghan\": \"bg-gradient-to-r from-black via-red-600 to-green-600\",\n            \"Pakistani\": \"bg-gradient-to-r from-green-600 to-white\",\n            \"Bangladeshi\": \"bg-gradient-to-r from-green-600 to-red-600\",\n            \"Sri Lankan\": \"bg-gradient-to-r from-orange-500 via-yellow-400 to-green-600\",\n            \"Nepalese\": \"bg-gradient-to-b from-red-600 via-blue-600 to-red-600\",\n            \"Bhutanese\": \"bg-gradient-to-b from-yellow-400 to-orange-500\",\n            \"Maldivian\": \"bg-gradient-to-r from-red-600 to-green-600\",\n            \"Indonesian\": \"bg-gradient-to-b from-red-600 to-white\",\n            \"Malaysian\": \"bg-gradient-to-b from-red-600 via-white to-blue-600\",\n            \"Singaporean\": \"bg-gradient-to-b from-red-600 to-white\",\n            \"Filipino\": \"bg-gradient-to-b from-blue-600 via-red-600 to-blue-600\",\n            \"Vietnamese\": \"bg-gradient-to-b from-red-600 to-yellow-400\",\n            \"Cambodian\": \"bg-gradient-to-b from-blue-600 via-red-600 to-blue-600\",\n            \"Laotian\": \"bg-gradient-to-b from-red-600 via-white to-blue-600\",\n            \"Myanmar\": \"bg-gradient-to-b from-yellow-400 via-green-600 to-red-600\",\n            \"Korean\": \"bg-gradient-to-b from-blue-600 via-white to-red-600\",\n            \"North Korean\": \"bg-gradient-to-b from-blue-600 via-white to-red-600\",\n            \"Mongolian\": \"bg-gradient-to-r from-red-600 via-blue-600 to-red-600\",\n            \"Taiwanese\": \"bg-gradient-to-r from-red-600 to-blue-600\",\n            \"Hong Kong\": \"bg-gradient-to-r from-red-600 to-white\",\n            \"Macanese\": \"bg-gradient-to-r from-green-600 to-white\"\n        };\n        return flagStyles[nationality] || \"bg-gray-200\";\n    };\n    const getSizeClasses = (size)=>{\n        switch(size){\n            case \"sm\":\n                return \"w-6 h-4 text-xs\";\n            case \"lg\":\n                return \"w-12 h-8 text-sm\";\n            default:\n                return \"w-8 h-6 text-xs\";\n        }\n    };\n    const getCountryCode = (nationality)=>{\n        const countryCodes = {\n            \"British\": \"GB\",\n            \"Dutch\": \"NL\",\n            \"Spanish\": \"ES\",\n            \"Mon\\xe9gasque\": \"MC\",\n            \"Monegasque\": \"MC\",\n            \"Mexican\": \"MX\",\n            \"Australian\": \"AU\",\n            \"Canadian\": \"CA\",\n            \"French\": \"FR\",\n            \"German\": \"DE\",\n            \"Japanese\": \"JP\",\n            \"Finnish\": \"FI\",\n            \"Danish\": \"DK\",\n            \"Thai\": \"TH\",\n            \"Chinese\": \"CN\",\n            \"American\": \"US\",\n            \"Italian\": \"IT\",\n            \"Brazilian\": \"BR\",\n            \"Argentine\": \"AR\",\n            \"South African\": \"ZA\",\n            \"Austrian\": \"AT\",\n            \"Swiss\": \"CH\",\n            \"Belgian\": \"BE\",\n            \"New Zealander\": \"NZ\",\n            \"Venezuelan\": \"VE\",\n            \"Russian\": \"RU\",\n            \"Portuguese\": \"PT\",\n            \"Polish\": \"PL\",\n            \"Czech\": \"CZ\",\n            \"Hungarian\": \"HU\",\n            \"Swedish\": \"SE\",\n            \"Norwegian\": \"NO\",\n            \"Indian\": \"IN\",\n            \"Colombian\": \"CO\",\n            \"Chilean\": \"CL\",\n            \"Uruguayan\": \"UY\",\n            \"Peruvian\": \"PE\",\n            \"Ecuadorian\": \"EC\",\n            \"Paraguayan\": \"PY\",\n            \"Bolivian\": \"BO\",\n            \"Croatian\": \"HR\",\n            \"Slovenian\": \"SI\",\n            \"Slovak\": \"SK\",\n            \"Romanian\": \"RO\",\n            \"Bulgarian\": \"BG\",\n            \"Greek\": \"GR\",\n            \"Turkish\": \"TR\",\n            \"Israeli\": \"IL\",\n            \"Lebanese\": \"LB\",\n            \"Jordanian\": \"JO\",\n            \"Emirati\": \"AE\",\n            \"Saudi\": \"SA\",\n            \"Qatari\": \"QA\",\n            \"Kuwaiti\": \"KW\",\n            \"Bahraini\": \"BH\",\n            \"Omani\": \"OM\",\n            \"Yemeni\": \"YE\",\n            \"Iraqi\": \"IQ\",\n            \"Iranian\": \"IR\",\n            \"Afghan\": \"AF\",\n            \"Pakistani\": \"PK\",\n            \"Bangladeshi\": \"BD\",\n            \"Sri Lankan\": \"LK\",\n            \"Nepalese\": \"NP\",\n            \"Bhutanese\": \"BT\",\n            \"Maldivian\": \"MV\",\n            \"Indonesian\": \"ID\",\n            \"Malaysian\": \"MY\",\n            \"Singaporean\": \"SG\",\n            \"Filipino\": \"PH\",\n            \"Vietnamese\": \"VN\",\n            \"Cambodian\": \"KH\",\n            \"Laotian\": \"LA\",\n            \"Myanmar\": \"MM\",\n            \"Korean\": \"KR\",\n            \"North Korean\": \"KP\",\n            \"Mongolian\": \"MN\",\n            \"Taiwanese\": \"TW\",\n            \"Hong Kong\": \"HK\",\n            \"Macanese\": \"MO\"\n        };\n        const normalizedNationality = (nationality === null || nationality === void 0 ? void 0 : nationality.trim()) || \"\";\n        return countryCodes[normalizedNationality] || countryCodes[normalizedNationality.toLowerCase()] || countryCodes[normalizedNationality.toUpperCase()] || countryCodes[normalizedNationality.charAt(0).toUpperCase() + normalizedNationality.slice(1).toLowerCase()] || \"XX\";\n    };\n    const normalizedNationality = (nationality === null || nationality === void 0 ? void 0 : nationality.trim()) || \"\";\n    const flagColors = getFlagColors(normalizedNationality);\n    const sizeClasses = getSizeClasses(size);\n    const countryCode = getCountryCode(normalizedNationality);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"\".concat(sizeClasses, \" \").concat(flagColors, \" rounded border shadow-sm\"),\n        title: \"\".concat(normalizedNationality, \" flag\")\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\User\\\\Documents\\\\VCS\\\\Formula 1\\\\src\\\\components\\\\FlagDisplay.tsx\",\n        lineNumber: 202,\n        columnNumber: 5\n    }, this);\n}\n_c = FlagDisplay;\nvar _c;\n$RefreshReg$(_c, \"FlagDisplay\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/FlagDisplay.tsx\n"));

/***/ })

});